name: 'OpsGenie Create Alert'
description: 'Create an alert in OpsGenie'

# Based on https://docs.opsgenie.com/docs/alert-api#create-alert
inputs:
  apiUrl:
    description: 'OpsGenie API URL'
    default: https://api.opsgenie.com/v2
    required: true

  apiKey:
    description: 'OpsGenie API Key'
    required: true

  message:
    description: 'Message of the alert. (Limit: 130 characters)'
    required: true
  
  alias:
    description: 'Client-defined identifier of the alert, that is also the key element of Alert De-Duplication. (Limit: 512 characters)'
    required: false

  description:
    description: 'Description field of the alert that is generally used to provide a detailed information about the alert. (Limit: 15000 characters)'
    required: false

  responders:
    description: 'An array of teams, users, escalations and schedules that the alert will be routed to. If responders field is not provided, the alert will be routed to the default responders of the alert policy. (Limit: 50 teams, users, escalations or schedules)'
    required: false

  visibleTo:
    description: 'An array of teams, users, escalations and schedules that the alert will be visible to without sending any notification. (Limit: 50 teams or users in total)'
    required: false

  actions:
    description: 'An array of custom actions that will be available for the alert. (Limit: 10 x 50 characters)'
    required: false

  tags:
    description: 'An array of tags of the alert. (Limit: 20 x 50 characters)'
    required: false

  details:
    description: 'Map of key-value pairs to use as custom properties of the alert. (Limit: 8000 characters in total)'
    required: false

  entity:
    description: 'Entity field of the alert, that is generally used to specify which domain the alert is related to. (Limit: 512 characters)'
    required: false

  source:
    description: 'Source field of the alert, that is used to carry where the alert is created. (Limit: 100 characters)'
    required: false

  priority:
    description: 'Priority level of the alert. Default value is P3. (Possible values: P1, P2, P3, P4, P5)'
    required: false

  user:
    description: 'Display name of the request owner. (Limit: 100 characters)'
    required: false

  note:
    description: 'Additional note that will be added while creating the alert. (Limit: 25000 characters)'
    required: false

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        # Init payload
        payload='{'
        \
        # Support alias
        if [[ -n ${{ inputs.alias }} ]]; then
          payload+="\"alias\":\"${{ inputs.alias }}\","
        fi
        \
        # Support description
        if [[ -n ${{ inputs.description }} ]]; then
          payload+="\"description\":\"${{ inputs.description }}\","
        fi
        \
        # Support responders
        if [[ -n ${{ inputs.responders }} ]]; then
          payload+="\"responders\":${{ inputs.responders }},"
        fi
        \
        # Support visibleTo
        if [[ -n ${{ inputs.visibleTo }} ]]; then
          payload+="\"visibleTo\":${{ inputs.visibleTo }},"
        fi
        \
        # Support actions
        if [[ -n ${{ inputs.actions }} ]]; then
          payload+="\"actions\":${{ inputs.actions }},"
        fi
        \
        # Support tags
        if [[ -n ${{ inputs.tags }} ]]; then
          payload+="\"tags\":${{ inputs.tags }},"
        fi
        \
        # Support details
        if [[ -n ${{ inputs.details }} ]]; then
          payload+="\"details\":${{ inputs.details }},"
        fi
        \
        # Support entity
        if [[ -n ${{ inputs.entity }} ]]; then
          payload+="\"entity\":\"${{ inputs.entity }}\","
        fi
        \
        # Support source
        if [[ -n ${{ inputs.source }} ]]; then
          payload+="\"source\":\"${{ inputs.source }}\","
        fi
        \
        # Support priority
        if [[ -n ${{ inputs.priority }} ]]; then
          if [[ ${{ inputs.priority }} =~ ^(P1|P2|P3|P4|P5)$ ]]; then
            payload+="\"priority\":\"${{ inputs.priority }}\","
          else
            echo "Invalid priority: ${{ inputs.priority }}"
            exit 1
          fi
        fi
        \
        # Support user
        if [[ -n ${{ inputs.user }} ]]; then
          payload+="\"user\":\"${{ inputs.user }}\","
        fi
        \
        # Support note
        if [[ -n ${{ inputs.note }} ]]; then
          payload+="\"note\":\"${{ inputs.note }}\","
        fi
        \
        # Add required message
        payload+="\"message\":\"${{ inputs.message }}\""
        \
        # Close payload
        payload+='}'
        \
        curl --request POST \
        --url "${{ inputs.apiUrl }}/alert" \
        --header "Authorization: GenieKey ${{ inputs.apiKey }}" \
        --header "Content-Type: application/json" \
        --data "${{ inputs.payload }}" \
        --fail
